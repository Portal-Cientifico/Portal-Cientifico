services:

  postgres-backend:
    image: postgres:16-alpine
    container_name: postgres-backend
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: db_backend
    ports:
      - "5434:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always
    networks:
      - spring-postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "db_prod" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      postgres-produtos:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=postgres-produtos
    networks:
      - react-spring
      - spring-postgres
    restart: always

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    networks:
      - react-spring
    depends_on:
      - backend
    expose:
      - 80

volumes:
  postgres-data: {}

networks:
  react-spring:
    driver: bridge
  spring-postgres:
    driver: bridge
